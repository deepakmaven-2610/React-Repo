{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deepak.singh_mavenwa\\\\Desktop\\\\dev-react-js\\\\24-react-routing-adv\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport EventForm from \"../components/EventForm\";\nimport { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage()\n//1\n{\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = fetch('http://localhost:8080/events/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save events'\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","json","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["C:/Users/deepak.singh_mavenwa/Desktop/dev-react-js/24-react-routing-adv/frontend/src/pages/NewEvent.js"],"sourcesContent":["import EventForm from \"../components/EventForm\";\r\nimport { json } from \"react-router-dom\";\r\nfunction NewEventPage()  //1\r\n{\r\n  return <EventForm/>\r\n}\r\n\r\nexport default NewEventPage;\r\n\r\nexport async function action({request, params})\r\n{\r\n    const data = await request.formData()\r\n\r\n    const eventData = {\r\n        title: data.get('title'),\r\n        image: data.get('image'),\r\n        date: data.get('date'),\r\n        description: data.get('description'),\r\n    }\r\n\r\n   const response = fetch('http://localhost:8080/events/',\r\n    {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type' : 'application/json'\r\n        },\r\n        body: JSON.stringify(eventData)\r\n    });\r\n\r\n    if(!response.ok)\r\n    {\r\n      throw json({message: 'Could not save events'}, {status:500});\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,SAASC,YAAYA,CAAA;AAAI;AACzB;EACE,oBAAOD,OAAA,CAACH,SAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACrB;AAACC,EAAA,GAHQL,YAAY;AAKrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAC9C;EACI,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAEF,MAAMI,QAAQ,GAAGC,KAAK,CAAC,+BAA+B,EACrD;IACIC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAG;IACrB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAG,CAACM,QAAQ,CAACO,EAAE,EACf;IACE,MAAM3B,IAAI,CAAC;MAAC4B,OAAO,EAAE;IAAuB,CAAC,EAAE;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EAC9D;AACJ;AAAC,IAAArB,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}