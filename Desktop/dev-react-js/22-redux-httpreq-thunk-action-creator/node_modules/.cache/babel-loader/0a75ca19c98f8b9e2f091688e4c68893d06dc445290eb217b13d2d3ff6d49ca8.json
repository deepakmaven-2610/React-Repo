{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemTocart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id); //to remove the item\n        state.totalQuantity--;\n      } else {\n        existingItem.quantity--;\n        // existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending....',\n      message: 'Sending cart data'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://react-https-f33c3-default-rtdb.firebaseio.com/cart.json',\n      //re-executes whenever our cart changes\n      {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success',\n        message: 'Sent cart data succesfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!....',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","addItemTocart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["C:/Users/deepak.singh_mavenwa/Desktop/dev-react-js/22-redux-httpreq-thunk-action-creator/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n    },\r\n    reducers: {\r\n        replaceCart(state, action) {\r\n          state.totalQuantity = action.payload.totalQuantity;\r\n          state.items = action.payload.items;\r\n        },\r\n        addItemTocart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id);\r\n            state.totalQuantity++;\r\n            if(!existingItem)\r\n            {\r\n                state.items.push({\r\n                    id: newItem.id, \r\n                    price: newItem.price, \r\n                    quantity: 1, \r\n                    totalPrice: newItem.price,\r\n                    name:newItem.title\r\n                });\r\n            } else{\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n            }\r\n        },\r\n        removeItemFromCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            \r\n            if(existingItem.quantity === 1)\r\n            {\r\n                state.items = state.items.filter(item => item.id !== id);  //to remove the item\r\n                state.totalQuantity--;\r\n            }\r\n            else\r\n            {\r\n                existingItem.quantity--;\r\n               // existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async(dispatch) => {\r\n        dispatch(\r\n            uiActions.showNotification({\r\n              status: 'pending',\r\n              title: 'Sending....',\r\n              message: 'Sending cart data',\r\n            })\r\n          );\r\n\r\n          const sendRequest = async() => \r\n          {\r\n            const response = await fetch('https://react-https-f33c3-default-rtdb.firebaseio.com/cart.json',    //re-executes whenever our cart changes\r\n            {\r\n             method: 'PUT', body: JSON.stringify(cart),\r\n           }\r\n         );\r\n   \r\n         if(!response.ok)\r\n         {\r\n           throw new Error('Sending cart data failed');\r\n         }\r\n         };\r\n\r\n         try\r\n         {\r\n            await sendRequest();\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                  status: 'success',\r\n                  title: 'Success',\r\n                  message: 'Sent cart data succesfully!',\r\n                })\r\n              )\r\n         }\r\n         catch(error)\r\n         {\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                  status: 'error',\r\n                  title: 'Error!....',\r\n                  message: 'Sending cart data failed!',\r\n                })\r\n              );\r\n         }\r\n        \r\n    }\r\n}\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}