{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\n//fetching data\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-https-f33c3-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch data');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!....',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};\n\n//sending data\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending....',\n      message: 'Sending cart data'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://react-https-f33c3-default-rtdb.firebaseio.com/cart.json',\n      //re-executes whenever our cart changes\n      {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success',\n        message: 'Sent cart data succesfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!....',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["C:/Users/deepak.singh_mavenwa/Desktop/dev-react-js/22-redux-httpreq-thunk-action-creator/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\r\nimport { cartActions } from \"./cart-slice\";\r\n\r\n//fetching data\r\nexport const fetchCartData = () => {\r\n  return async(dispatch) => {\r\n    const fetchData = async() => {\r\n      const response = await fetch('https://react-https-f33c3-default-rtdb.firebaseio.com/cart.json');\r\n      \r\n      if(!response.ok)\r\n      {\r\n        throw new Error('Could not fetch data');\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n\r\n    try{\r\n      const cartData = await fetchData();\r\n      dispatch(cartActions.replaceCart({\r\n        items: cartData.items || [],\r\n        totalQuantity: cartData.totalQuantity,\r\n      }));\r\n    }\r\n    catch(error)\r\n    {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'Error!....',\r\n          message: 'Fetching cart data failed!',\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\n//sending data\r\nexport const sendCartData = (cart) => {\r\n    return async(dispatch) => {\r\n        dispatch(\r\n            uiActions.showNotification({\r\n              status: 'pending',\r\n              title: 'Sending....',\r\n              message: 'Sending cart data',\r\n            })\r\n          );\r\n\r\n          const sendRequest = async() => \r\n          {\r\n            const response = await fetch('https://react-https-f33c3-default-rtdb.firebaseio.com/cart.json',    //re-executes whenever our cart changes\r\n            {\r\n             method: 'PUT', body: JSON.stringify(cart),\r\n           }\r\n         );\r\n   \r\n         if(!response.ok)\r\n         {\r\n           throw new Error('Sending cart data failed');\r\n         }\r\n         };\r\n\r\n         try\r\n         {\r\n            await sendRequest();\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                  status: 'success',\r\n                  title: 'Success',\r\n                  message: 'Sent cart data succesfully!',\r\n                })\r\n              )\r\n         }\r\n         catch(error)\r\n         {\r\n            dispatch(\r\n                uiActions.showNotification({\r\n                  status: 'error',\r\n                  title: 'Error!....',\r\n                  message: 'Sending cart data failed!',\r\n                })\r\n              );\r\n         }\r\n        \r\n    }\r\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,cAAc;;AAE1C;AACA,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAMC,QAAQ,IAAK;IACxB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAW;MAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAiE,CAAC;MAE/F,IAAG,CAACD,QAAQ,CAACE,EAAE,EACf;QACE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC;IAED,IAAG;MACD,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CAACF,WAAW,CAACW,WAAW,CAAC;QAC/BC,KAAK,EAAEF,QAAQ,CAACE,KAAK,IAAI,EAAE;QAC3BC,aAAa,EAAEH,QAAQ,CAACG;MAC1B,CAAC,CAAC,CAAC;IACL,CAAC,CACD,OAAMC,KAAK,EACX;MACEZ,QAAQ,CACNH,SAAS,CAACgB,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,YAAY;QACnBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAMlB,QAAQ,IAAK;IACtBA,QAAQ,CACJH,SAAS,CAACgB,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,aAAa;MACpBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KACpB;MACE,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAiE;MAAK;MACnG;QACCiB,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MAC1C,CACF,CAAC;MAED,IAAG,CAAChB,QAAQ,CAACE,EAAE,EACf;QACE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACA,CAAC;IAED,IACA;MACG,MAAMc,WAAW,CAAC,CAAC;MACnBnB,QAAQ,CACJH,SAAS,CAACgB,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACN,CAAC,CACD,OAAMJ,KAAK,EACX;MACGZ,QAAQ,CACJH,SAAS,CAACgB,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,YAAY;QACnBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACN;EAEL,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}